parameters:
  imageName: ''
  containerName: ''
  containerPort: ''
  volumes: ''
  discoveryAppId: ''
  discoveryAppSecret: ''
  os: ''

steps:
- bash: |
    echo "Variable 'imageName' found with value '$IMAGE_NAME'"
    if [ -z "$IMAGE_NAME" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"imageName\""
      echo "##vso[task.complete result=Failed;]"
    fi
    echo "Variable 'containerName' found with value '$CONTAINER_NAME'"
    if [ -z "$CONTAINER_NAME" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"containerName\""
      echo "##vso[task.complete result=Failed;]"
    fi
    echo "Variable 'containerPort' found with value '$CONTAINER_PORT'"
    if [ -z "$CONTAINER_PORT" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"containerPort\""
      echo "##vso[task.complete result=Failed;]"
    fi
    echo "Variable 'volumes' found with value '$VOLUMES'"
    if [ -z "$VOLUMES" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"volumes\""
      echo "##vso[task.complete result=Failed;]"
    fi
    echo "Variable 'discoveryAppId' found with value '$DISCOVERY_APP_ID'"
    if [ -z "$DISCOVERY_APP_ID" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"discoveryAppId\""
      echo "##vso[task.complete result=Failed;]"
    fi
    echo "Variable 'discoveryAppSecret' found with value '$DISCOVERY_APP_SECRET'"
    if [ -z "$DISCOVERY_APP_SECRET" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"discoveryAppSecret\""
      echo "##vso[task.complete result=Failed;]"
    fi
    echo "Variable 'os' found with value '$OS'"
    if [ -z "$OS" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"os\""
      echo "##vso[task.complete result=Failed;]"
    fi
  env:
    IMAGE_NAME: ${{ parameters.imageName }}
    CONTAINER_NAME: ${{ parameters.containerName }}
    CONTAINER_PORT: ${{ parameters.containerPort }}
    VOLUMES: ${{ parameters.volumes }}
    DISCOVERY_APP_ID: ${{ parameters.discoveryAppId }}
    DISCOVERY_APP_SECRET: ${{ parameters.discoveryAppSecret }}
    OS: ${{ parameters.os }}
  displayName: Check for required parameters in YAML template
- script: |
      echo Mounting volumes: ${{ parameters.volumes }}
      echo App secret: ${{ parameters.discoveryAppSecret }}
      docker run -d -p ${{ parameters.containerPort }}:88 --name ${{ parameters.containerName }} --env DISCOVERY_APPID=${{ parameters.discoveryAppId }} --env DISCOVERY_APPSECRET=${{ parameters.discoveryAppSecret }} --volume ${{ parameters.volumes }} ${{ parameters.imageName }}
      sleep 10
      docker logs ${{ parameters.containerName }}
  displayName: Run Resource Discovery image as ${{ parameters.containerName }} container on ${{ parameters.os }}
  failOnStderr: true