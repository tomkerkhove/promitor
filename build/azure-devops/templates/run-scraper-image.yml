parameters:
  imageName: ''
  containerName: 'promitor-ci'
  volumes: 'promitor-ci'
  os: ''

steps:
- bash: |
    echo "Variable 'imageName' found with value '$IMAGE_NAME'"
    if [ -z "$IMAGE_NAME" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"imageName\""
      echo "##vso[task.complete result=Failed;]"
    fi
    echo "Variable 'containerName' found with value '$CONTAINER_NAME'"
    if [ -z "$CONTAINER_NAME" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"containerName\""
      echo "##vso[task.complete result=Failed;]"
    fi
    echo "Variable 'volumes' found with value '$VOLUMES'"
    if [ -z "$VOLUMES" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"volumes\""
      echo "##vso[task.complete result=Failed;]"
    fi
    echo "Variable 'os' found with value '$OS'"
    if [ -z "$OS" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"os\""
      echo "##vso[task.complete result=Failed;]"
    fi
  env:
    IMAGE_NAME: ${{ parameters.imageName }}
    CONTAINER_NAME: ${{ parameters.containerName }}
    VOLUMES: ${{ parameters.volumes }}
    OS: ${{ parameters.os }}
  displayName: Check for required parameters in YAML template
- task: Docker@1
  displayName: 'Run Scraper image as ''${{ parameters.containerName }}'' container on ${{ parameters.os }}'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'Docker Hub'
    command: 'Run an image'
    imageName: '${{ parameters.imageName }}'
    containerName: '${{ parameters.containerName }}'
    ports: '8999:80'
    volumes: '${{ parameters.volumes }}'
    envVars: |
     PROMITOR_AUTH_APPID='$(Container.Env.AzureMonitor.Id)'
     PROMITOR_AUTH_APPKEY='$(Container.Env.AzureMonitor.Key)'