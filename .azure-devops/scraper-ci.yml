name: PR$(System.PullRequest.PullRequestNumber)$(Rev:-rr)
resources:
- repo: self
variables:
  Image.TaggedName: 'tomkerkhove/promitor-agent-scraper-ci:$(Build.BuildNumber)'
jobs:
- job: Build_Job
  displayName: Build, Test & Scan Codebase
  condition: succeeded()
  pool:
    vmImage: vs2017-win2016
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      projects: src/Promitor.sln
      arguments: '--configuration release'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet test'
    inputs:
      command: test
      projects: src/Promitor.Scraper.Tests.Unit/Promitor.Scraper.Tests.Unit.csproj

- job: Docker_Job
  displayName: Build Docker Image Tests
  condition: succeeded()
  pool:
    vmImage: ubuntu-16.04
  steps:
  - task: Docker@1
    displayName: 'Build an image'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: 'Docker Hub'
      dockerFile: ./src/Promitor.Scraper.Host/Dockerfile
      arguments: '--tag promitor-scraper-ci --no-cache'
      useDefaultContext: false
      buildContext: ./src/
      imageName: '$(Image.TaggedName)'
      addDefaultLabels: false

  - task: Docker@1
    displayName: 'Run an image'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: 'Docker Hub'
      command: 'Run an image'
      imageName: '$(Image.TaggedName)'
      containerName: 'promitor-ci'
      ports: '8999:80'
      volumes: '/samples/promitor-sample.yaml:/config/metrics-declaration.yaml promitor-scraper-ci'
      envVars: |
       PROMITOR_AUTH_APPID='$(Container.Env.AzureMonitor.Id)'
       PROMITOR_AUTH_APPKEY='$(Container.Env.AzureMonitor.Key)'

  - task: Docker@1
    displayName: 'Push ''tomkerkhove/promitor-agent-scraper-ci'' image to Docker Hub'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: 'Docker Hub'
      command: 'Push an image'
      imageName: '$(Image.TaggedName)'


